# coding: utf-8

"""
    SevOne API Documentation

    Supported endpoints by the new RESTful API  # noqa: E501

    OpenAPI spec version: 2.1.18, Hash: db562e6
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AlertAttachmentDataDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'aggregation_type': 'str',
        'alert_id': 'int',
        'device_description': 'str',
        'device_group_id': 'int',
        'device_group_name': 'str',
        'device_id': 'int',
        'device_name': 'str',
        'end_time': 'int',
        'max_severity': 'int',
        'message': 'str',
        'min_severity': 'int',
        'number_of_alerts': 'int',
        'object_group_id': 'int',
        'object_group_name': 'str',
        'object_id': 'int',
        'object_name': 'str',
        'occurrences': 'int',
        'origin': 'str',
        'severity': 'int',
        'start_time': 'int'
    }

    attribute_map = {
        'aggregation_type': 'aggregationType',
        'alert_id': 'alertId',
        'device_description': 'deviceDescription',
        'device_group_id': 'deviceGroupId',
        'device_group_name': 'deviceGroupName',
        'device_id': 'deviceId',
        'device_name': 'deviceName',
        'end_time': 'endTime',
        'max_severity': 'maxSeverity',
        'message': 'message',
        'min_severity': 'minSeverity',
        'number_of_alerts': 'numberOfAlerts',
        'object_group_id': 'objectGroupId',
        'object_group_name': 'objectGroupName',
        'object_id': 'objectId',
        'object_name': 'objectName',
        'occurrences': 'occurrences',
        'origin': 'origin',
        'severity': 'severity',
        'start_time': 'startTime'
    }

    def __init__(self, aggregation_type=None, alert_id=None, device_description=None, device_group_id=None, device_group_name=None, device_id=None, device_name=None, end_time=None, max_severity=None, message=None, min_severity=None, number_of_alerts=None, object_group_id=None, object_group_name=None, object_id=None, object_name=None, occurrences=None, origin=None, severity=None, start_time=None):  # noqa: E501
        """AlertAttachmentDataDto - a model defined in Swagger"""  # noqa: E501

        self._aggregation_type = None
        self._alert_id = None
        self._device_description = None
        self._device_group_id = None
        self._device_group_name = None
        self._device_id = None
        self._device_name = None
        self._end_time = None
        self._max_severity = None
        self._message = None
        self._min_severity = None
        self._number_of_alerts = None
        self._object_group_id = None
        self._object_group_name = None
        self._object_id = None
        self._object_name = None
        self._occurrences = None
        self._origin = None
        self._severity = None
        self._start_time = None
        self.discriminator = None

        if aggregation_type is not None:
            self.aggregation_type = aggregation_type
        if alert_id is not None:
            self.alert_id = alert_id
        if device_description is not None:
            self.device_description = device_description
        if device_group_id is not None:
            self.device_group_id = device_group_id
        if device_group_name is not None:
            self.device_group_name = device_group_name
        if device_id is not None:
            self.device_id = device_id
        if device_name is not None:
            self.device_name = device_name
        if end_time is not None:
            self.end_time = end_time
        if max_severity is not None:
            self.max_severity = max_severity
        if message is not None:
            self.message = message
        if min_severity is not None:
            self.min_severity = min_severity
        if number_of_alerts is not None:
            self.number_of_alerts = number_of_alerts
        if object_group_id is not None:
            self.object_group_id = object_group_id
        if object_group_name is not None:
            self.object_group_name = object_group_name
        if object_id is not None:
            self.object_id = object_id
        if object_name is not None:
            self.object_name = object_name
        if occurrences is not None:
            self.occurrences = occurrences
        if origin is not None:
            self.origin = origin
        if severity is not None:
            self.severity = severity
        if start_time is not None:
            self.start_time = start_time

    @property
    def aggregation_type(self):
        """Gets the aggregation_type of this AlertAttachmentDataDto.  # noqa: E501


        :return: The aggregation_type of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._aggregation_type

    @aggregation_type.setter
    def aggregation_type(self, aggregation_type):
        """Sets the aggregation_type of this AlertAttachmentDataDto.


        :param aggregation_type: The aggregation_type of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """
        allowed_values = ["deviceGroup", "deviceType"]  # noqa: E501
        if aggregation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `aggregation_type` ({0}), must be one of {1}"  # noqa: E501
                .format(aggregation_type, allowed_values)
            )

        self._aggregation_type = aggregation_type

    @property
    def alert_id(self):
        """Gets the alert_id of this AlertAttachmentDataDto.  # noqa: E501


        :return: The alert_id of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._alert_id

    @alert_id.setter
    def alert_id(self, alert_id):
        """Sets the alert_id of this AlertAttachmentDataDto.


        :param alert_id: The alert_id of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._alert_id = alert_id

    @property
    def device_description(self):
        """Gets the device_description of this AlertAttachmentDataDto.  # noqa: E501


        :return: The device_description of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._device_description

    @device_description.setter
    def device_description(self, device_description):
        """Sets the device_description of this AlertAttachmentDataDto.


        :param device_description: The device_description of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._device_description = device_description

    @property
    def device_group_id(self):
        """Gets the device_group_id of this AlertAttachmentDataDto.  # noqa: E501


        :return: The device_group_id of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._device_group_id

    @device_group_id.setter
    def device_group_id(self, device_group_id):
        """Sets the device_group_id of this AlertAttachmentDataDto.


        :param device_group_id: The device_group_id of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._device_group_id = device_group_id

    @property
    def device_group_name(self):
        """Gets the device_group_name of this AlertAttachmentDataDto.  # noqa: E501


        :return: The device_group_name of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._device_group_name

    @device_group_name.setter
    def device_group_name(self, device_group_name):
        """Sets the device_group_name of this AlertAttachmentDataDto.


        :param device_group_name: The device_group_name of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._device_group_name = device_group_name

    @property
    def device_id(self):
        """Gets the device_id of this AlertAttachmentDataDto.  # noqa: E501


        :return: The device_id of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this AlertAttachmentDataDto.


        :param device_id: The device_id of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._device_id = device_id

    @property
    def device_name(self):
        """Gets the device_name of this AlertAttachmentDataDto.  # noqa: E501


        :return: The device_name of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this AlertAttachmentDataDto.


        :param device_name: The device_name of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._device_name = device_name

    @property
    def end_time(self):
        """Gets the end_time of this AlertAttachmentDataDto.  # noqa: E501


        :return: The end_time of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this AlertAttachmentDataDto.


        :param end_time: The end_time of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._end_time = end_time

    @property
    def max_severity(self):
        """Gets the max_severity of this AlertAttachmentDataDto.  # noqa: E501


        :return: The max_severity of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._max_severity

    @max_severity.setter
    def max_severity(self, max_severity):
        """Sets the max_severity of this AlertAttachmentDataDto.


        :param max_severity: The max_severity of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._max_severity = max_severity

    @property
    def message(self):
        """Gets the message of this AlertAttachmentDataDto.  # noqa: E501


        :return: The message of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AlertAttachmentDataDto.


        :param message: The message of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def min_severity(self):
        """Gets the min_severity of this AlertAttachmentDataDto.  # noqa: E501


        :return: The min_severity of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._min_severity

    @min_severity.setter
    def min_severity(self, min_severity):
        """Sets the min_severity of this AlertAttachmentDataDto.


        :param min_severity: The min_severity of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._min_severity = min_severity

    @property
    def number_of_alerts(self):
        """Gets the number_of_alerts of this AlertAttachmentDataDto.  # noqa: E501


        :return: The number_of_alerts of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._number_of_alerts

    @number_of_alerts.setter
    def number_of_alerts(self, number_of_alerts):
        """Sets the number_of_alerts of this AlertAttachmentDataDto.


        :param number_of_alerts: The number_of_alerts of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._number_of_alerts = number_of_alerts

    @property
    def object_group_id(self):
        """Gets the object_group_id of this AlertAttachmentDataDto.  # noqa: E501


        :return: The object_group_id of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._object_group_id

    @object_group_id.setter
    def object_group_id(self, object_group_id):
        """Sets the object_group_id of this AlertAttachmentDataDto.


        :param object_group_id: The object_group_id of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._object_group_id = object_group_id

    @property
    def object_group_name(self):
        """Gets the object_group_name of this AlertAttachmentDataDto.  # noqa: E501


        :return: The object_group_name of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._object_group_name

    @object_group_name.setter
    def object_group_name(self, object_group_name):
        """Sets the object_group_name of this AlertAttachmentDataDto.


        :param object_group_name: The object_group_name of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._object_group_name = object_group_name

    @property
    def object_id(self):
        """Gets the object_id of this AlertAttachmentDataDto.  # noqa: E501


        :return: The object_id of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this AlertAttachmentDataDto.


        :param object_id: The object_id of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._object_id = object_id

    @property
    def object_name(self):
        """Gets the object_name of this AlertAttachmentDataDto.  # noqa: E501


        :return: The object_name of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this AlertAttachmentDataDto.


        :param object_name: The object_name of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._object_name = object_name

    @property
    def occurrences(self):
        """Gets the occurrences of this AlertAttachmentDataDto.  # noqa: E501


        :return: The occurrences of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._occurrences

    @occurrences.setter
    def occurrences(self, occurrences):
        """Sets the occurrences of this AlertAttachmentDataDto.


        :param occurrences: The occurrences of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._occurrences = occurrences

    @property
    def origin(self):
        """Gets the origin of this AlertAttachmentDataDto.  # noqa: E501


        :return: The origin of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this AlertAttachmentDataDto.


        :param origin: The origin of this AlertAttachmentDataDto.  # noqa: E501
        :type: str
        """

        self._origin = origin

    @property
    def severity(self):
        """Gets the severity of this AlertAttachmentDataDto.  # noqa: E501


        :return: The severity of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this AlertAttachmentDataDto.


        :param severity: The severity of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._severity = severity

    @property
    def start_time(self):
        """Gets the start_time of this AlertAttachmentDataDto.  # noqa: E501


        :return: The start_time of this AlertAttachmentDataDto.  # noqa: E501
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this AlertAttachmentDataDto.


        :param start_time: The start_time of this AlertAttachmentDataDto.  # noqa: E501
        :type: int
        """

        self._start_time = start_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AlertAttachmentDataDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AlertAttachmentDataDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
